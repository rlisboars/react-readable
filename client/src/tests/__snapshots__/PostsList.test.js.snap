// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostsList Component testing snapshot connection error in PostsList 1`] = `
<PostsList
  categories={
    Array [
      Object {
        "name": "All",
        "path": "",
      },
      Object {
        "name": "react",
        "path": "react",
      },
      Object {
        "name": "redux",
        "path": "redux",
      },
      Object {
        "name": "udacity",
        "path": "udacity",
      },
    ]
  }
  changes={
    Object {
      "editingComment": null,
      "editingPost": null,
    }
  }
  comments={Array []}
  filters={
    Object {
      "category": "All",
      "isCreatingComment": false,
      "isCreatingPost": false,
      "sortByComment": "score",
      "sortByPost": "score",
    }
  }
  getPosts={[Function]}
  match={
    Object {
      "params": Object {},
    }
  }
  posts={
    Object {
      "error": "Message error",
    }
  }
>
  <div>
    <Connect(Header)
      history={undefined}
    >
      <Header
        categories={
          Array [
            Object {
              "name": "All",
              "path": "",
            },
            Object {
              "name": "react",
              "path": "react",
            },
            Object {
              "name": "redux",
              "path": "redux",
            },
            Object {
              "name": "udacity",
              "path": "udacity",
            },
          ]
        }
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        getCategories={[Function]}
        history={undefined}
        setFilters={[Function]}
      >
        <Menu
          borderless={true}
        >
          <div
            className="ui borderless menu"
          >
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <Link
                  className="logo"
                  replace={false}
                  to="/"
                >
                  <a
                    className="logo"
                    href="/"
                    onClick={[Function]}
                  >
                    Leitura
                  </a>
                </Link>
              </div>
            </MenuItem>
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <span
                  className="category-select-label"
                >
                  Category:
                </span>
                <Select
                  className="category-select"
                  disabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": 0,
                        "text": "All",
                        "value": "All",
                      },
                      Object {
                        "key": 1,
                        "text": "react",
                        "value": "react",
                      },
                      Object {
                        "key": 2,
                        "text": "redux",
                        "value": "redux",
                      },
                      Object {
                        "key": 3,
                        "text": "udacity",
                        "value": "udacity",
                      },
                    ]
                  }
                  placeholder="Choose a category"
                  value="All"
                >
                  <Dropdown
                    additionLabel="Add "
                    additionPosition="top"
                    className="category-select"
                    closeOnBlur={true}
                    disabled={false}
                    icon="dropdown"
                    minCharacters={1}
                    noResultsMessage="No results found."
                    onChange={[Function]}
                    openOnFocus={true}
                    options={
                      Array [
                        Object {
                          "key": 0,
                          "text": "All",
                          "value": "All",
                        },
                        Object {
                          "key": 1,
                          "text": "react",
                          "value": "react",
                        },
                        Object {
                          "key": 2,
                          "text": "redux",
                          "value": "redux",
                        },
                        Object {
                          "key": 3,
                          "text": "udacity",
                          "value": "udacity",
                        },
                      ]
                    }
                    placeholder="Choose a category"
                    renderLabel={[Function]}
                    searchInput="text"
                    selectOnBlur={true}
                    selectOnNavigation={true}
                    selection={true}
                    value="All"
                  >
                    <div
                      aria-busy={undefined}
                      aria-disabled={false}
                      aria-expanded={false}
                      aria-multiselectable={undefined}
                      className="ui selection dropdown category-select"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      role="listbox"
                      tabIndex={0}
                    >
                      <div
                        aria-live="polite"
                        className="text"
                        role="alert"
                      >
                        All
                      </div>
                      <Icon
                        as="i"
                        key="dropdown"
                        name="dropdown"
                        onClick={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="dropdown icon"
                          onClick={[Function]}
                        />
                      </Icon>
                      <DropdownMenu
                        className=""
                      >
                        <div
                          className="menu transition"
                        >
                          <DropdownItem
                            active={true}
                            key="0"
                            onClick={[Function]}
                            selected={true}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="All"
                            value="All"
                          >
                            <div
                              aria-checked={true}
                              aria-disabled={undefined}
                              aria-selected={true}
                              className="active selected item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="All"
                              >
                                All
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="1"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="react"
                            value="react"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="react"
                              >
                                react
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="2"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="redux"
                            value="redux"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="redux"
                              >
                                redux
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="3"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="udacity"
                            value="udacity"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="udacity"
                              >
                                udacity
                              </span>
                            </div>
                          </DropdownItem>
                        </div>
                      </DropdownMenu>
                    </div>
                  </Dropdown>
                </Select>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </Header>
    </Connect(Header)>
    <Message
      className="infoMessage"
      negative={true}
    >
      <div
        className="ui negative message infoMessage"
      >
        <MessageHeader>
          <div
            className="header"
          >
            Message error
          </div>
        </MessageHeader>
      </div>
    </Message>
  </div>
</PostsList>
`;

exports[`PostsList Component testing snapshot of Post creation in PostsList 1`] = `
<PostsList
  categories={
    Array [
      Object {
        "name": "All",
        "path": "",
      },
      Object {
        "name": "react",
        "path": "react",
      },
      Object {
        "name": "redux",
        "path": "redux",
      },
      Object {
        "name": "udacity",
        "path": "udacity",
      },
    ]
  }
  changes={
    Object {
      "editingComment": null,
      "editingPost": null,
    }
  }
  comments={Array []}
  filters={
    Object {
      "category": "All",
      "isCreatingComment": false,
      "isCreatingPost": true,
      "sortByComment": "score",
      "sortByPost": "score",
    }
  }
  getPosts={[Function]}
  match={
    Object {
      "params": Object {},
    }
  }
  posts={Array []}
>
  <div>
    <Connect(Header)
      history={undefined}
      selected={undefined}
    >
      <Header
        categories={
          Array [
            Object {
              "name": "All",
              "path": "",
            },
            Object {
              "name": "react",
              "path": "react",
            },
            Object {
              "name": "redux",
              "path": "redux",
            },
            Object {
              "name": "udacity",
              "path": "udacity",
            },
          ]
        }
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        getCategories={[Function]}
        history={undefined}
        selected={undefined}
        setFilters={[Function]}
      >
        <Menu
          borderless={true}
        >
          <div
            className="ui borderless menu"
          >
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <Link
                  className="logo"
                  replace={false}
                  to="/"
                >
                  <a
                    className="logo"
                    href="/"
                    onClick={[Function]}
                  >
                    Leitura
                  </a>
                </Link>
              </div>
            </MenuItem>
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <span
                  className="category-select-label"
                >
                  Category:
                </span>
                <Select
                  className="category-select"
                  disabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": 0,
                        "text": "All",
                        "value": "All",
                      },
                      Object {
                        "key": 1,
                        "text": "react",
                        "value": "react",
                      },
                      Object {
                        "key": 2,
                        "text": "redux",
                        "value": "redux",
                      },
                      Object {
                        "key": 3,
                        "text": "udacity",
                        "value": "udacity",
                      },
                    ]
                  }
                  placeholder="Choose a category"
                  value="All"
                >
                  <Dropdown
                    additionLabel="Add "
                    additionPosition="top"
                    className="category-select"
                    closeOnBlur={true}
                    disabled={false}
                    icon="dropdown"
                    minCharacters={1}
                    noResultsMessage="No results found."
                    onChange={[Function]}
                    openOnFocus={true}
                    options={
                      Array [
                        Object {
                          "key": 0,
                          "text": "All",
                          "value": "All",
                        },
                        Object {
                          "key": 1,
                          "text": "react",
                          "value": "react",
                        },
                        Object {
                          "key": 2,
                          "text": "redux",
                          "value": "redux",
                        },
                        Object {
                          "key": 3,
                          "text": "udacity",
                          "value": "udacity",
                        },
                      ]
                    }
                    placeholder="Choose a category"
                    renderLabel={[Function]}
                    searchInput="text"
                    selectOnBlur={true}
                    selectOnNavigation={true}
                    selection={true}
                    value="All"
                  >
                    <div
                      aria-busy={undefined}
                      aria-disabled={false}
                      aria-expanded={false}
                      aria-multiselectable={undefined}
                      className="ui selection dropdown category-select"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      role="listbox"
                      tabIndex={0}
                    >
                      <div
                        aria-live="polite"
                        className="text"
                        role="alert"
                      >
                        All
                      </div>
                      <Icon
                        as="i"
                        key="dropdown"
                        name="dropdown"
                        onClick={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="dropdown icon"
                          onClick={[Function]}
                        />
                      </Icon>
                      <DropdownMenu
                        className=""
                      >
                        <div
                          className="menu transition"
                        >
                          <DropdownItem
                            active={true}
                            key="0"
                            onClick={[Function]}
                            selected={true}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="All"
                            value="All"
                          >
                            <div
                              aria-checked={true}
                              aria-disabled={undefined}
                              aria-selected={true}
                              className="active selected item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="All"
                              >
                                All
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="1"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="react"
                            value="react"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="react"
                              >
                                react
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="2"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="redux"
                            value="redux"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="redux"
                              >
                                redux
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="3"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="udacity"
                            value="udacity"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="udacity"
                              >
                                udacity
                              </span>
                            </div>
                          </DropdownItem>
                        </div>
                      </DropdownMenu>
                    </div>
                  </Dropdown>
                </Select>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </Header>
    </Connect(Header)>
    <Connect(ListActions)>
      <ListActions
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        setFilters={[Function]}
      >
        <Menu
          className="sub-menu"
          secondary={true}
        >
          <div
            className="ui secondary sub-menu menu"
          >
            <MenuItem
              header={true}
            >
              <div
                className="header item"
                onClick={[Function]}
              >
                Sort By:
              </div>
            </MenuItem>
            <MenuItem
              active={true}
              name="score"
              onClick={[Function]}
            >
              <a
                className="active item"
                onClick={[Function]}
              >
                High Score
              </a>
            </MenuItem>
            <MenuItem
              active={false}
              name="recent"
              onClick={[Function]}
            >
              <a
                className="item"
                onClick={[Function]}
              >
                Most Recent
              </a>
            </MenuItem>
            <MenuItem
              position="right"
            >
              <div
                className="right item"
                onClick={[Function]}
              >
                <Button
                  as="button"
                  content="Create Post"
                  icon="plus"
                  labelPosition="left"
                  onClick={[Function]}
                >
                  <button
                    className="ui icon left labeled button"
                    disabled={undefined}
                    onClick={[Function]}
                    role="button"
                    tabIndex={undefined}
                  >
                    <Icon
                      as="i"
                      key="plus"
                      name="plus"
                    >
                      <i
                        aria-hidden="true"
                        className="plus icon"
                      />
                    </Icon>
                    Create Post
                  </button>
                </Button>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </ListActions>
    </Connect(ListActions)>
    <Connect(PostForm)>
      <PostForm
        categories={
          Array [
            Object {
              "name": "All",
              "path": "",
            },
            Object {
              "name": "react",
              "path": "react",
            },
            Object {
              "name": "redux",
              "path": "redux",
            },
            Object {
              "name": "udacity",
              "path": "udacity",
            },
          ]
        }
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        getPost={[Function]}
        post={null}
        savePost={[Function]}
        setFilters={[Function]}
      >
        <Segment
          raised={true}
        >
          <div
            className="ui raised segment"
          >
            <Form
              as="form"
            >
              <form
                action={undefined}
                className="ui form"
                onSubmit={[Function]}
              >
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  label="Title"
                  name="title"
                  onChange={[Function]}
                  placeholder="Post Title"
                  required={true}
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="Title"
                    name="title"
                    onChange={[Function]}
                    placeholder="Post Title"
                    required={true}
                    value=""
                  >
                    <div
                      className="required field"
                    >
                      <label
                        htmlFor={undefined}
                        key="Title"
                      >
                        Title
                      </label>
                      <Input
                        disabled={undefined}
                        name="title"
                        onChange={[Function]}
                        placeholder="Post Title"
                        required={true}
                        type="text"
                        value=""
                      >
                        <div
                          className="ui input"
                        >
                          <input
                            disabled={undefined}
                            key="text"
                            name="title"
                            onChange={[Function]}
                            placeholder="Post Title"
                            required={true}
                            tabIndex={undefined}
                            type="text"
                            value=""
                          />
                        </div>
                      </Input>
                    </div>
                  </FormField>
                </FormInput>
                <FormTextArea
                  as={[Function]}
                  control={[Function]}
                  label="Body"
                  name="body"
                  onChange={[Function]}
                  placeholder="Post Content"
                  required={true}
                  value=""
                >
                  <FormField
                    control={[Function]}
                    label="Body"
                    name="body"
                    onChange={[Function]}
                    placeholder="Post Content"
                    required={true}
                    value=""
                  >
                    <div
                      className="required field"
                    >
                      <label
                        htmlFor={undefined}
                        key="Body"
                      >
                        Body
                      </label>
                      <TextArea
                        as="textarea"
                        disabled={undefined}
                        name="body"
                        onChange={[Function]}
                        placeholder="Post Content"
                        required={true}
                        rows={3}
                        type={undefined}
                        value=""
                      >
                        <textarea
                          disabled={undefined}
                          name="body"
                          onChange={[Function]}
                          onInput={[Function]}
                          placeholder="Post Content"
                          required={true}
                          rows={3}
                          style={
                            Object {
                              "resize": "",
                            }
                          }
                          type={undefined}
                          value=""
                        />
                      </TextArea>
                    </div>
                  </FormField>
                </FormTextArea>
                <FormGroup>
                  <div
                    className="fields"
                  >
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      disabled={false}
                      label="Author"
                      name="author"
                      onChange={[Function]}
                      placeholder="Your name"
                      required={true}
                      value=""
                      width={3}
                    >
                      <FormField
                        control={[Function]}
                        disabled={false}
                        label="Author"
                        name="author"
                        onChange={[Function]}
                        placeholder="Your name"
                        required={true}
                        value=""
                        width={3}
                      >
                        <div
                          className="required three wide field"
                        >
                          <label
                            htmlFor={undefined}
                            key="Author"
                          >
                            Author
                          </label>
                          <Input
                            disabled={false}
                            name="author"
                            onChange={[Function]}
                            placeholder="Your name"
                            required={true}
                            type="text"
                            value=""
                          >
                            <div
                              className="ui input"
                            >
                              <input
                                disabled={false}
                                key="text"
                                name="author"
                                onChange={[Function]}
                                placeholder="Your name"
                                required={true}
                                tabIndex={undefined}
                                type="text"
                                value=""
                              />
                            </div>
                          </Input>
                        </div>
                      </FormField>
                    </FormInput>
                    <FormSelect
                      as={[Function]}
                      className="category-select"
                      control={[Function]}
                      disabled={false}
                      label="Category"
                      name="category"
                      onChange={[Function]}
                      options={
                        Array [
                          Object {
                            "key": 0,
                            "text": "react",
                            "value": "react",
                          },
                          Object {
                            "key": 1,
                            "text": "redux",
                            "value": "redux",
                          },
                          Object {
                            "key": 2,
                            "text": "udacity",
                            "value": "udacity",
                          },
                        ]
                      }
                      placeholder="Select a category"
                      required={true}
                      value=""
                    >
                      <FormField
                        className="category-select"
                        control={[Function]}
                        disabled={false}
                        label="Category"
                        name="category"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": 0,
                              "text": "react",
                              "value": "react",
                            },
                            Object {
                              "key": 1,
                              "text": "redux",
                              "value": "redux",
                            },
                            Object {
                              "key": 2,
                              "text": "udacity",
                              "value": "udacity",
                            },
                          ]
                        }
                        placeholder="Select a category"
                        required={true}
                        value=""
                      >
                        <div
                          className="required field category-select"
                        >
                          <label
                            htmlFor={undefined}
                            key="Category"
                          >
                            Category
                          </label>
                          <Select
                            disabled={false}
                            name="category"
                            onChange={[Function]}
                            options={
                              Array [
                                Object {
                                  "key": 0,
                                  "text": "react",
                                  "value": "react",
                                },
                                Object {
                                  "key": 1,
                                  "text": "redux",
                                  "value": "redux",
                                },
                                Object {
                                  "key": 2,
                                  "text": "udacity",
                                  "value": "udacity",
                                },
                              ]
                            }
                            placeholder="Select a category"
                            required={true}
                            type={undefined}
                            value=""
                          >
                            <Dropdown
                              additionLabel="Add "
                              additionPosition="top"
                              closeOnBlur={true}
                              disabled={false}
                              icon="dropdown"
                              minCharacters={1}
                              name="category"
                              noResultsMessage="No results found."
                              onChange={[Function]}
                              openOnFocus={true}
                              options={
                                Array [
                                  Object {
                                    "key": 0,
                                    "text": "react",
                                    "value": "react",
                                  },
                                  Object {
                                    "key": 1,
                                    "text": "redux",
                                    "value": "redux",
                                  },
                                  Object {
                                    "key": 2,
                                    "text": "udacity",
                                    "value": "udacity",
                                  },
                                ]
                              }
                              placeholder="Select a category"
                              renderLabel={[Function]}
                              required={true}
                              searchInput="text"
                              selectOnBlur={true}
                              selectOnNavigation={true}
                              selection={true}
                              type={undefined}
                              value=""
                            >
                              <div
                                aria-busy={undefined}
                                aria-disabled={false}
                                aria-expanded={false}
                                aria-multiselectable={undefined}
                                className="ui selection dropdown"
                                name="category"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onMouseDown={[Function]}
                                required={true}
                                role="listbox"
                                tabIndex={0}
                                type={undefined}
                              >
                                <div
                                  aria-live="polite"
                                  className="default text"
                                  role="alert"
                                >
                                  Select a category
                                </div>
                                <Icon
                                  as="i"
                                  key="dropdown"
                                  name="dropdown"
                                  onClick={[Function]}
                                >
                                  <i
                                    aria-hidden="true"
                                    className="dropdown icon"
                                    onClick={[Function]}
                                  />
                                </Icon>
                                <DropdownMenu
                                  className=""
                                >
                                  <div
                                    className="menu transition"
                                  >
                                    <DropdownItem
                                      active={false}
                                      key="0"
                                      onClick={[Function]}
                                      selected={true}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="react"
                                      value="react"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-disabled={undefined}
                                        aria-selected={true}
                                        className="selected item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="react"
                                        >
                                          react
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="1"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="redux"
                                      value="redux"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-disabled={undefined}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="redux"
                                        >
                                          redux
                                        </span>
                                      </div>
                                    </DropdownItem>
                                    <DropdownItem
                                      active={false}
                                      key="2"
                                      onClick={[Function]}
                                      selected={false}
                                      style={
                                        Object {
                                          "pointerEvents": "all",
                                        }
                                      }
                                      text="udacity"
                                      value="udacity"
                                    >
                                      <div
                                        aria-checked={false}
                                        aria-disabled={undefined}
                                        aria-selected={false}
                                        className="item"
                                        onClick={[Function]}
                                        role="option"
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                      >
                                        <span
                                          className="text"
                                          key="udacity"
                                        >
                                          udacity
                                        </span>
                                      </div>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Dropdown>
                          </Select>
                        </div>
                      </FormField>
                    </FormSelect>
                    <FormButton
                      as={[Function]}
                      className="btn-form"
                      control={[Function]}
                      fluid={true}
                      onClick={[Function]}
                      primary={true}
                      width={2}
                    >
                      <FormField
                        className="btn-form"
                        control={[Function]}
                        fluid={true}
                        onClick={[Function]}
                        primary={true}
                        width={2}
                      >
                        <div
                          className="two wide field btn-form"
                        >
                          <Button
                            as="button"
                            disabled={undefined}
                            fluid={true}
                            onClick={[Function]}
                            primary={true}
                            required={undefined}
                            type={undefined}
                          >
                            <button
                              className="ui fluid primary button"
                              disabled={undefined}
                              onClick={[Function]}
                              required={undefined}
                              role="button"
                              tabIndex={undefined}
                              type={undefined}
                            >
                              Save
                            </button>
                          </Button>
                        </div>
                      </FormField>
                    </FormButton>
                    <FormButton
                      as={[Function]}
                      className="btn-form"
                      control={[Function]}
                      fluid={true}
                      onClick={[Function]}
                      width={2}
                    >
                      <FormField
                        className="btn-form"
                        control={[Function]}
                        fluid={true}
                        onClick={[Function]}
                        width={2}
                      >
                        <div
                          className="two wide field btn-form"
                        >
                          <Button
                            as="button"
                            disabled={undefined}
                            fluid={true}
                            onClick={[Function]}
                            required={undefined}
                            type={undefined}
                          >
                            <button
                              className="ui fluid button"
                              disabled={undefined}
                              onClick={[Function]}
                              required={undefined}
                              role="button"
                              tabIndex={undefined}
                              type={undefined}
                            >
                              Cancel
                            </button>
                          </Button>
                        </div>
                      </FormField>
                    </FormButton>
                  </div>
                </FormGroup>
              </form>
            </Form>
          </div>
        </Segment>
      </PostForm>
    </Connect(PostForm)>
  </div>
</PostsList>
`;

exports[`PostsList Component testing snapshot of Post editing in PostsList 1`] = `
<PostsList
  categories={
    Array [
      Object {
        "name": "All",
        "path": "",
      },
      Object {
        "name": "react",
        "path": "react",
      },
      Object {
        "name": "redux",
        "path": "redux",
      },
      Object {
        "name": "udacity",
        "path": "udacity",
      },
    ]
  }
  changes={
    Object {
      "editingComment": null,
      "editingPost": "8xf0y6ziyjabvozdd253nd",
    }
  }
  comments={Array []}
  filters={
    Object {
      "category": "react",
      "isCreatingComment": false,
      "isCreatingPost": true,
      "sortByComment": "score",
      "sortByPost": "score",
    }
  }
  getPosts={[Function]}
  match={
    Object {
      "params": Object {
        "category": "react",
      },
    }
  }
  posts={
    Array [
      Object {
        "author": "thingtwo",
        "body": "Everyone says so after all.",
        "category": "react",
        "deleted": false,
        "id": "8xf0y6ziyjabvozdd253nd",
        "timestamp": 1467166872634,
        "title": "Udacity is the best place to learn React",
        "voteScore": 6,
      },
      Object {
        "author": "thingone",
        "body": "Just kidding. It takes more than 10 minutes to learn technology.",
        "category": "redux",
        "deleted": false,
        "id": "6ni6ok3ym7mf1p33lnez",
        "timestamp": 1468479767190,
        "title": "Learn Redux in 10 minutes!",
        "voteScore": -5,
      },
    ]
  }
>
  <div>
    <Connect(Header)
      history={undefined}
      selected={
        Object {
          "name": "react",
          "path": "react",
        }
      }
    >
      <Header
        categories={
          Array [
            Object {
              "name": "All",
              "path": "",
            },
            Object {
              "name": "react",
              "path": "react",
            },
            Object {
              "name": "redux",
              "path": "redux",
            },
            Object {
              "name": "udacity",
              "path": "udacity",
            },
          ]
        }
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        getCategories={[Function]}
        history={undefined}
        selected={
          Object {
            "name": "react",
            "path": "react",
          }
        }
        setFilters={[Function]}
      >
        <Menu
          borderless={true}
        >
          <div
            className="ui borderless menu"
          >
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <Link
                  className="logo"
                  replace={false}
                  to="/"
                >
                  <a
                    className="logo"
                    href="/"
                    onClick={[Function]}
                  >
                    Leitura
                  </a>
                </Link>
              </div>
            </MenuItem>
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <span
                  className="category-select-label"
                >
                  Category:
                </span>
                <Select
                  className="category-select"
                  disabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": 0,
                        "text": "All",
                        "value": "All",
                      },
                      Object {
                        "key": 1,
                        "text": "react",
                        "value": "react",
                      },
                      Object {
                        "key": 2,
                        "text": "redux",
                        "value": "redux",
                      },
                      Object {
                        "key": 3,
                        "text": "udacity",
                        "value": "udacity",
                      },
                    ]
                  }
                  placeholder="Choose a category"
                  value="All"
                >
                  <Dropdown
                    additionLabel="Add "
                    additionPosition="top"
                    className="category-select"
                    closeOnBlur={true}
                    disabled={false}
                    icon="dropdown"
                    minCharacters={1}
                    noResultsMessage="No results found."
                    onChange={[Function]}
                    openOnFocus={true}
                    options={
                      Array [
                        Object {
                          "key": 0,
                          "text": "All",
                          "value": "All",
                        },
                        Object {
                          "key": 1,
                          "text": "react",
                          "value": "react",
                        },
                        Object {
                          "key": 2,
                          "text": "redux",
                          "value": "redux",
                        },
                        Object {
                          "key": 3,
                          "text": "udacity",
                          "value": "udacity",
                        },
                      ]
                    }
                    placeholder="Choose a category"
                    renderLabel={[Function]}
                    searchInput="text"
                    selectOnBlur={true}
                    selectOnNavigation={true}
                    selection={true}
                    value="All"
                  >
                    <div
                      aria-busy={undefined}
                      aria-disabled={false}
                      aria-expanded={false}
                      aria-multiselectable={undefined}
                      className="ui selection dropdown category-select"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      role="listbox"
                      tabIndex={0}
                    >
                      <div
                        aria-live="polite"
                        className="text"
                        role="alert"
                      >
                        All
                      </div>
                      <Icon
                        as="i"
                        key="dropdown"
                        name="dropdown"
                        onClick={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="dropdown icon"
                          onClick={[Function]}
                        />
                      </Icon>
                      <DropdownMenu
                        className=""
                      >
                        <div
                          className="menu transition"
                        >
                          <DropdownItem
                            active={true}
                            key="0"
                            onClick={[Function]}
                            selected={true}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="All"
                            value="All"
                          >
                            <div
                              aria-checked={true}
                              aria-disabled={undefined}
                              aria-selected={true}
                              className="active selected item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="All"
                              >
                                All
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="1"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="react"
                            value="react"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="react"
                              >
                                react
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="2"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="redux"
                            value="redux"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="redux"
                              >
                                redux
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="3"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="udacity"
                            value="udacity"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="udacity"
                              >
                                udacity
                              </span>
                            </div>
                          </DropdownItem>
                        </div>
                      </DropdownMenu>
                    </div>
                  </Dropdown>
                </Select>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </Header>
    </Connect(Header)>
    <Connect(ListActions)>
      <ListActions
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        setFilters={[Function]}
      >
        <Menu
          className="sub-menu"
          secondary={true}
        >
          <div
            className="ui secondary sub-menu menu"
          >
            <MenuItem
              header={true}
            >
              <div
                className="header item"
                onClick={[Function]}
              >
                Sort By:
              </div>
            </MenuItem>
            <MenuItem
              active={true}
              name="score"
              onClick={[Function]}
            >
              <a
                className="active item"
                onClick={[Function]}
              >
                High Score
              </a>
            </MenuItem>
            <MenuItem
              active={false}
              name="recent"
              onClick={[Function]}
            >
              <a
                className="item"
                onClick={[Function]}
              >
                Most Recent
              </a>
            </MenuItem>
            <MenuItem
              position="right"
            >
              <div
                className="right item"
                onClick={[Function]}
              >
                <Button
                  as="button"
                  content="Create Post"
                  icon="plus"
                  labelPosition="left"
                  onClick={[Function]}
                >
                  <button
                    className="ui icon left labeled button"
                    disabled={undefined}
                    onClick={[Function]}
                    role="button"
                    tabIndex={undefined}
                  >
                    <Icon
                      as="i"
                      key="plus"
                      name="plus"
                    >
                      <i
                        aria-hidden="true"
                        className="plus icon"
                      />
                    </Icon>
                    Create Post
                  </button>
                </Button>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </ListActions>
    </Connect(ListActions)>
    <div>
      <Connect(PostForm)
        key="8xf0y6ziyjabvozdd253nd"
      >
        <PostForm
          categories={
            Array [
              Object {
                "name": "All",
                "path": "",
              },
              Object {
                "name": "react",
                "path": "react",
              },
              Object {
                "name": "redux",
                "path": "redux",
              },
              Object {
                "name": "udacity",
                "path": "udacity",
              },
            ]
          }
          filters={
            Object {
              "category": "All",
              "isCreatingComment": false,
              "isCreatingPost": false,
              "sortByComment": "score",
              "sortByPost": "score",
            }
          }
          getPost={[Function]}
          post={null}
          savePost={[Function]}
          setFilters={[Function]}
        >
          <Segment
            raised={true}
          >
            <div
              className="ui raised segment"
            >
              <Form
                as="form"
              >
                <form
                  action={undefined}
                  className="ui form"
                  onSubmit={[Function]}
                >
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    label="Title"
                    name="title"
                    onChange={[Function]}
                    placeholder="Post Title"
                    required={true}
                    value=""
                  >
                    <FormField
                      control={[Function]}
                      label="Title"
                      name="title"
                      onChange={[Function]}
                      placeholder="Post Title"
                      required={true}
                      value=""
                    >
                      <div
                        className="required field"
                      >
                        <label
                          htmlFor={undefined}
                          key="Title"
                        >
                          Title
                        </label>
                        <Input
                          disabled={undefined}
                          name="title"
                          onChange={[Function]}
                          placeholder="Post Title"
                          required={true}
                          type="text"
                          value=""
                        >
                          <div
                            className="ui input"
                          >
                            <input
                              disabled={undefined}
                              key="text"
                              name="title"
                              onChange={[Function]}
                              placeholder="Post Title"
                              required={true}
                              tabIndex={undefined}
                              type="text"
                              value=""
                            />
                          </div>
                        </Input>
                      </div>
                    </FormField>
                  </FormInput>
                  <FormTextArea
                    as={[Function]}
                    control={[Function]}
                    label="Body"
                    name="body"
                    onChange={[Function]}
                    placeholder="Post Content"
                    required={true}
                    value=""
                  >
                    <FormField
                      control={[Function]}
                      label="Body"
                      name="body"
                      onChange={[Function]}
                      placeholder="Post Content"
                      required={true}
                      value=""
                    >
                      <div
                        className="required field"
                      >
                        <label
                          htmlFor={undefined}
                          key="Body"
                        >
                          Body
                        </label>
                        <TextArea
                          as="textarea"
                          disabled={undefined}
                          name="body"
                          onChange={[Function]}
                          placeholder="Post Content"
                          required={true}
                          rows={3}
                          type={undefined}
                          value=""
                        >
                          <textarea
                            disabled={undefined}
                            name="body"
                            onChange={[Function]}
                            onInput={[Function]}
                            placeholder="Post Content"
                            required={true}
                            rows={3}
                            style={
                              Object {
                                "resize": "",
                              }
                            }
                            type={undefined}
                            value=""
                          />
                        </TextArea>
                      </div>
                    </FormField>
                  </FormTextArea>
                  <FormGroup>
                    <div
                      className="fields"
                    >
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        disabled={false}
                        label="Author"
                        name="author"
                        onChange={[Function]}
                        placeholder="Your name"
                        required={true}
                        value=""
                        width={3}
                      >
                        <FormField
                          control={[Function]}
                          disabled={false}
                          label="Author"
                          name="author"
                          onChange={[Function]}
                          placeholder="Your name"
                          required={true}
                          value=""
                          width={3}
                        >
                          <div
                            className="required three wide field"
                          >
                            <label
                              htmlFor={undefined}
                              key="Author"
                            >
                              Author
                            </label>
                            <Input
                              disabled={false}
                              name="author"
                              onChange={[Function]}
                              placeholder="Your name"
                              required={true}
                              type="text"
                              value=""
                            >
                              <div
                                className="ui input"
                              >
                                <input
                                  disabled={false}
                                  key="text"
                                  name="author"
                                  onChange={[Function]}
                                  placeholder="Your name"
                                  required={true}
                                  tabIndex={undefined}
                                  type="text"
                                  value=""
                                />
                              </div>
                            </Input>
                          </div>
                        </FormField>
                      </FormInput>
                      <FormSelect
                        as={[Function]}
                        className="category-select"
                        control={[Function]}
                        disabled={false}
                        label="Category"
                        name="category"
                        onChange={[Function]}
                        options={
                          Array [
                            Object {
                              "key": 0,
                              "text": "react",
                              "value": "react",
                            },
                            Object {
                              "key": 1,
                              "text": "redux",
                              "value": "redux",
                            },
                            Object {
                              "key": 2,
                              "text": "udacity",
                              "value": "udacity",
                            },
                          ]
                        }
                        placeholder="Select a category"
                        required={true}
                        value=""
                      >
                        <FormField
                          className="category-select"
                          control={[Function]}
                          disabled={false}
                          label="Category"
                          name="category"
                          onChange={[Function]}
                          options={
                            Array [
                              Object {
                                "key": 0,
                                "text": "react",
                                "value": "react",
                              },
                              Object {
                                "key": 1,
                                "text": "redux",
                                "value": "redux",
                              },
                              Object {
                                "key": 2,
                                "text": "udacity",
                                "value": "udacity",
                              },
                            ]
                          }
                          placeholder="Select a category"
                          required={true}
                          value=""
                        >
                          <div
                            className="required field category-select"
                          >
                            <label
                              htmlFor={undefined}
                              key="Category"
                            >
                              Category
                            </label>
                            <Select
                              disabled={false}
                              name="category"
                              onChange={[Function]}
                              options={
                                Array [
                                  Object {
                                    "key": 0,
                                    "text": "react",
                                    "value": "react",
                                  },
                                  Object {
                                    "key": 1,
                                    "text": "redux",
                                    "value": "redux",
                                  },
                                  Object {
                                    "key": 2,
                                    "text": "udacity",
                                    "value": "udacity",
                                  },
                                ]
                              }
                              placeholder="Select a category"
                              required={true}
                              type={undefined}
                              value=""
                            >
                              <Dropdown
                                additionLabel="Add "
                                additionPosition="top"
                                closeOnBlur={true}
                                disabled={false}
                                icon="dropdown"
                                minCharacters={1}
                                name="category"
                                noResultsMessage="No results found."
                                onChange={[Function]}
                                openOnFocus={true}
                                options={
                                  Array [
                                    Object {
                                      "key": 0,
                                      "text": "react",
                                      "value": "react",
                                    },
                                    Object {
                                      "key": 1,
                                      "text": "redux",
                                      "value": "redux",
                                    },
                                    Object {
                                      "key": 2,
                                      "text": "udacity",
                                      "value": "udacity",
                                    },
                                  ]
                                }
                                placeholder="Select a category"
                                renderLabel={[Function]}
                                required={true}
                                searchInput="text"
                                selectOnBlur={true}
                                selectOnNavigation={true}
                                selection={true}
                                type={undefined}
                                value=""
                              >
                                <div
                                  aria-busy={undefined}
                                  aria-disabled={false}
                                  aria-expanded={false}
                                  aria-multiselectable={undefined}
                                  className="ui selection dropdown"
                                  name="category"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onClick={[Function]}
                                  onFocus={[Function]}
                                  onMouseDown={[Function]}
                                  required={true}
                                  role="listbox"
                                  tabIndex={0}
                                  type={undefined}
                                >
                                  <div
                                    aria-live="polite"
                                    className="default text"
                                    role="alert"
                                  >
                                    Select a category
                                  </div>
                                  <Icon
                                    as="i"
                                    key="dropdown"
                                    name="dropdown"
                                    onClick={[Function]}
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="dropdown icon"
                                      onClick={[Function]}
                                    />
                                  </Icon>
                                  <DropdownMenu
                                    className=""
                                  >
                                    <div
                                      className="menu transition"
                                    >
                                      <DropdownItem
                                        active={false}
                                        key="0"
                                        onClick={[Function]}
                                        selected={true}
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                        text="react"
                                        value="react"
                                      >
                                        <div
                                          aria-checked={false}
                                          aria-disabled={undefined}
                                          aria-selected={true}
                                          className="selected item"
                                          onClick={[Function]}
                                          role="option"
                                          style={
                                            Object {
                                              "pointerEvents": "all",
                                            }
                                          }
                                        >
                                          <span
                                            className="text"
                                            key="react"
                                          >
                                            react
                                          </span>
                                        </div>
                                      </DropdownItem>
                                      <DropdownItem
                                        active={false}
                                        key="1"
                                        onClick={[Function]}
                                        selected={false}
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                        text="redux"
                                        value="redux"
                                      >
                                        <div
                                          aria-checked={false}
                                          aria-disabled={undefined}
                                          aria-selected={false}
                                          className="item"
                                          onClick={[Function]}
                                          role="option"
                                          style={
                                            Object {
                                              "pointerEvents": "all",
                                            }
                                          }
                                        >
                                          <span
                                            className="text"
                                            key="redux"
                                          >
                                            redux
                                          </span>
                                        </div>
                                      </DropdownItem>
                                      <DropdownItem
                                        active={false}
                                        key="2"
                                        onClick={[Function]}
                                        selected={false}
                                        style={
                                          Object {
                                            "pointerEvents": "all",
                                          }
                                        }
                                        text="udacity"
                                        value="udacity"
                                      >
                                        <div
                                          aria-checked={false}
                                          aria-disabled={undefined}
                                          aria-selected={false}
                                          className="item"
                                          onClick={[Function]}
                                          role="option"
                                          style={
                                            Object {
                                              "pointerEvents": "all",
                                            }
                                          }
                                        >
                                          <span
                                            className="text"
                                            key="udacity"
                                          >
                                            udacity
                                          </span>
                                        </div>
                                      </DropdownItem>
                                    </div>
                                  </DropdownMenu>
                                </div>
                              </Dropdown>
                            </Select>
                          </div>
                        </FormField>
                      </FormSelect>
                      <FormButton
                        as={[Function]}
                        className="btn-form"
                        control={[Function]}
                        fluid={true}
                        onClick={[Function]}
                        primary={true}
                        width={2}
                      >
                        <FormField
                          className="btn-form"
                          control={[Function]}
                          fluid={true}
                          onClick={[Function]}
                          primary={true}
                          width={2}
                        >
                          <div
                            className="two wide field btn-form"
                          >
                            <Button
                              as="button"
                              disabled={undefined}
                              fluid={true}
                              onClick={[Function]}
                              primary={true}
                              required={undefined}
                              type={undefined}
                            >
                              <button
                                className="ui fluid primary button"
                                disabled={undefined}
                                onClick={[Function]}
                                required={undefined}
                                role="button"
                                tabIndex={undefined}
                                type={undefined}
                              >
                                Save
                              </button>
                            </Button>
                          </div>
                        </FormField>
                      </FormButton>
                      <FormButton
                        as={[Function]}
                        className="btn-form"
                        control={[Function]}
                        fluid={true}
                        onClick={[Function]}
                        width={2}
                      >
                        <FormField
                          className="btn-form"
                          control={[Function]}
                          fluid={true}
                          onClick={[Function]}
                          width={2}
                        >
                          <div
                            className="two wide field btn-form"
                          >
                            <Button
                              as="button"
                              disabled={undefined}
                              fluid={true}
                              onClick={[Function]}
                              required={undefined}
                              type={undefined}
                            >
                              <button
                                className="ui fluid button"
                                disabled={undefined}
                                onClick={[Function]}
                                required={undefined}
                                role="button"
                                tabIndex={undefined}
                                type={undefined}
                              >
                                Cancel
                              </button>
                            </Button>
                          </div>
                        </FormField>
                      </FormButton>
                    </div>
                  </FormGroup>
                </form>
              </Form>
            </div>
          </Segment>
        </PostForm>
      </Connect(PostForm)>
    </div>
  </div>
</PostsList>
`;

exports[`PostsList Component testing snapshot of connected PostLists with connection error 1`] = `
<Connect(PostsList)
  match={
    Object {
      "params": Object {
        "category": "react",
      },
    }
  }
>
  <PostsList
    categories={
      Array [
        Object {
          "name": "All",
          "path": "",
        },
        Object {
          "name": "react",
          "path": "react",
        },
        Object {
          "name": "redux",
          "path": "redux",
        },
        Object {
          "name": "udacity",
          "path": "udacity",
        },
      ]
    }
    changes={
      Object {
        "editingComment": null,
        "editingPost": null,
      }
    }
    comments={
      Object {
        "8xf0y6ziyjabvozdd253nd": Array [
          Object {
            "author": "thingtwo",
            "body": "Hi there! I am a COMMENT.",
            "deleted": false,
            "id": "894tuq4ut84ut8v4t8wun89g",
            "parentDeleted": false,
            "parentId": "8xf0y6ziyjabvozdd253nd",
            "timestamp": 1468166872634,
            "voteScore": 6,
          },
          Object {
            "author": "thingone",
            "body": "Comments. Are. Cool.",
            "deleted": false,
            "id": "8tu4bsun805n8un48ve89",
            "parentDeleted": false,
            "parentId": "8xf0y6ziyjabvozdd253nd",
            "timestamp": 1469479767190,
            "voteScore": -5,
          },
        ],
      }
    }
    filters={
      Object {
        "category": "All",
        "isCreatingComment": false,
        "isCreatingPost": false,
        "sortByComment": "score",
        "sortByPost": "score",
      }
    }
    getPosts={[Function]}
    match={
      Object {
        "params": Object {
          "category": "react",
        },
      }
    }
    posts={
      Object {
        "error": "Error message",
      }
    }
  >
    <div>
      <Connect(Header)
        history={undefined}
      >
        <Header
          categories={
            Array [
              Object {
                "name": "All",
                "path": "",
              },
              Object {
                "name": "react",
                "path": "react",
              },
              Object {
                "name": "redux",
                "path": "redux",
              },
              Object {
                "name": "udacity",
                "path": "udacity",
              },
            ]
          }
          filters={
            Object {
              "category": "All",
              "isCreatingComment": false,
              "isCreatingPost": false,
              "sortByComment": "score",
              "sortByPost": "score",
            }
          }
          getCategories={[Function]}
          history={undefined}
          setFilters={[Function]}
        >
          <Menu
            borderless={true}
          >
            <div
              className="ui borderless menu"
            >
              <MenuItem>
                <div
                  className="item"
                  onClick={[Function]}
                >
                  <Link
                    className="logo"
                    replace={false}
                    to="/"
                  >
                    <a
                      className="logo"
                      href="/"
                      onClick={[Function]}
                    >
                      Leitura
                    </a>
                  </Link>
                </div>
              </MenuItem>
              <MenuItem>
                <div
                  className="item"
                  onClick={[Function]}
                >
                  <span
                    className="category-select-label"
                  >
                    Category:
                  </span>
                  <Select
                    className="category-select"
                    disabled={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": 0,
                          "text": "All",
                          "value": "All",
                        },
                        Object {
                          "key": 1,
                          "text": "react",
                          "value": "react",
                        },
                        Object {
                          "key": 2,
                          "text": "redux",
                          "value": "redux",
                        },
                        Object {
                          "key": 3,
                          "text": "udacity",
                          "value": "udacity",
                        },
                      ]
                    }
                    placeholder="Choose a category"
                    value="All"
                  >
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      className="category-select"
                      closeOnBlur={true}
                      disabled={false}
                      icon="dropdown"
                      minCharacters={1}
                      noResultsMessage="No results found."
                      onChange={[Function]}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "key": 0,
                            "text": "All",
                            "value": "All",
                          },
                          Object {
                            "key": 1,
                            "text": "react",
                            "value": "react",
                          },
                          Object {
                            "key": 2,
                            "text": "redux",
                            "value": "redux",
                          },
                          Object {
                            "key": 3,
                            "text": "udacity",
                            "value": "udacity",
                          },
                        ]
                      }
                      placeholder="Choose a category"
                      renderLabel={[Function]}
                      searchInput="text"
                      selectOnBlur={true}
                      selectOnNavigation={true}
                      selection={true}
                      value="All"
                    >
                      <div
                        aria-busy={undefined}
                        aria-disabled={false}
                        aria-expanded={false}
                        aria-multiselectable={undefined}
                        className="ui selection dropdown category-select"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        >
                          All
                        </div>
                        <Icon
                          as="i"
                          key="dropdown"
                          name="dropdown"
                          onClick={[Function]}
                        >
                          <i
                            aria-hidden="true"
                            className="dropdown icon"
                            onClick={[Function]}
                          />
                        </Icon>
                        <DropdownMenu
                          className=""
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={true}
                              key="0"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="All"
                              value="All"
                            >
                              <div
                                aria-checked={true}
                                aria-disabled={undefined}
                                aria-selected={true}
                                className="active selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="All"
                                >
                                  All
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="1"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="react"
                              value="react"
                            >
                              <div
                                aria-checked={false}
                                aria-disabled={undefined}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="react"
                                >
                                  react
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="2"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="redux"
                              value="redux"
                            >
                              <div
                                aria-checked={false}
                                aria-disabled={undefined}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="redux"
                                >
                                  redux
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="3"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="udacity"
                              value="udacity"
                            >
                              <div
                                aria-checked={false}
                                aria-disabled={undefined}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="udacity"
                                >
                                  udacity
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                  </Select>
                </div>
              </MenuItem>
            </div>
          </Menu>
        </Header>
      </Connect(Header)>
      <Message
        className="infoMessage"
        negative={true}
      >
        <div
          className="ui negative message infoMessage"
        >
          <MessageHeader>
            <div
              className="header"
            >
              Error message
            </div>
          </MessageHeader>
        </div>
      </Message>
    </div>
  </PostsList>
</Connect(PostsList)>
`;

exports[`PostsList Component testing snapshot of connected PostsList 1`] = `
<Connect(PostsList)
  match={
    Object {
      "params": Object {
        "category": "react",
      },
    }
  }
>
  <PostsList
    categories={
      Array [
        Object {
          "name": "All",
          "path": "",
        },
        Object {
          "name": "react",
          "path": "react",
        },
        Object {
          "name": "redux",
          "path": "redux",
        },
        Object {
          "name": "udacity",
          "path": "udacity",
        },
      ]
    }
    changes={
      Object {
        "editingComment": null,
        "editingPost": null,
      }
    }
    comments={
      Object {
        "8xf0y6ziyjabvozdd253nd": Array [
          Object {
            "author": "thingtwo",
            "body": "Hi there! I am a COMMENT.",
            "deleted": false,
            "id": "894tuq4ut84ut8v4t8wun89g",
            "parentDeleted": false,
            "parentId": "8xf0y6ziyjabvozdd253nd",
            "timestamp": 1468166872634,
            "voteScore": 6,
          },
          Object {
            "author": "thingone",
            "body": "Comments. Are. Cool.",
            "deleted": false,
            "id": "8tu4bsun805n8un48ve89",
            "parentDeleted": false,
            "parentId": "8xf0y6ziyjabvozdd253nd",
            "timestamp": 1469479767190,
            "voteScore": -5,
          },
        ],
      }
    }
    filters={
      Object {
        "category": "All",
        "isCreatingComment": false,
        "isCreatingPost": false,
        "sortByComment": "score",
        "sortByPost": "score",
      }
    }
    getPosts={[Function]}
    match={
      Object {
        "params": Object {
          "category": "react",
        },
      }
    }
    posts={
      Array [
        Object {
          "author": "thingtwo",
          "body": "Everyone says so after all.",
          "category": "react",
          "deleted": false,
          "id": "8xf0y6ziyjabvozdd253nd",
          "timestamp": 1467166872634,
          "title": "Udacity is the best place to learn React",
          "voteScore": 6,
        },
        Object {
          "author": "thingone",
          "body": "Just kidding. It takes more than 10 minutes to learn technology.",
          "category": "redux",
          "deleted": false,
          "id": "6ni6ok3ym7mf1p33lnez",
          "timestamp": 1468479767190,
          "title": "Learn Redux in 10 minutes!",
          "voteScore": -5,
        },
      ]
    }
  >
    <div>
      <Connect(Header)
        history={undefined}
        selected={
          Object {
            "name": "react",
            "path": "react",
          }
        }
      >
        <Header
          categories={
            Array [
              Object {
                "name": "All",
                "path": "",
              },
              Object {
                "name": "react",
                "path": "react",
              },
              Object {
                "name": "redux",
                "path": "redux",
              },
              Object {
                "name": "udacity",
                "path": "udacity",
              },
            ]
          }
          filters={
            Object {
              "category": "All",
              "isCreatingComment": false,
              "isCreatingPost": false,
              "sortByComment": "score",
              "sortByPost": "score",
            }
          }
          getCategories={[Function]}
          history={undefined}
          selected={
            Object {
              "name": "react",
              "path": "react",
            }
          }
          setFilters={[Function]}
        >
          <Menu
            borderless={true}
          >
            <div
              className="ui borderless menu"
            >
              <MenuItem>
                <div
                  className="item"
                  onClick={[Function]}
                >
                  <Link
                    className="logo"
                    replace={false}
                    to="/"
                  >
                    <a
                      className="logo"
                      href="/"
                      onClick={[Function]}
                    >
                      Leitura
                    </a>
                  </Link>
                </div>
              </MenuItem>
              <MenuItem>
                <div
                  className="item"
                  onClick={[Function]}
                >
                  <span
                    className="category-select-label"
                  >
                    Category:
                  </span>
                  <Select
                    className="category-select"
                    disabled={false}
                    onChange={[Function]}
                    options={
                      Array [
                        Object {
                          "key": 0,
                          "text": "All",
                          "value": "All",
                        },
                        Object {
                          "key": 1,
                          "text": "react",
                          "value": "react",
                        },
                        Object {
                          "key": 2,
                          "text": "redux",
                          "value": "redux",
                        },
                        Object {
                          "key": 3,
                          "text": "udacity",
                          "value": "udacity",
                        },
                      ]
                    }
                    placeholder="Choose a category"
                    value="All"
                  >
                    <Dropdown
                      additionLabel="Add "
                      additionPosition="top"
                      className="category-select"
                      closeOnBlur={true}
                      disabled={false}
                      icon="dropdown"
                      minCharacters={1}
                      noResultsMessage="No results found."
                      onChange={[Function]}
                      openOnFocus={true}
                      options={
                        Array [
                          Object {
                            "key": 0,
                            "text": "All",
                            "value": "All",
                          },
                          Object {
                            "key": 1,
                            "text": "react",
                            "value": "react",
                          },
                          Object {
                            "key": 2,
                            "text": "redux",
                            "value": "redux",
                          },
                          Object {
                            "key": 3,
                            "text": "udacity",
                            "value": "udacity",
                          },
                        ]
                      }
                      placeholder="Choose a category"
                      renderLabel={[Function]}
                      searchInput="text"
                      selectOnBlur={true}
                      selectOnNavigation={true}
                      selection={true}
                      value="All"
                    >
                      <div
                        aria-busy={undefined}
                        aria-disabled={false}
                        aria-expanded={false}
                        aria-multiselectable={undefined}
                        className="ui selection dropdown category-select"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseDown={[Function]}
                        role="listbox"
                        tabIndex={0}
                      >
                        <div
                          aria-live="polite"
                          className="text"
                          role="alert"
                        >
                          All
                        </div>
                        <Icon
                          as="i"
                          key="dropdown"
                          name="dropdown"
                          onClick={[Function]}
                        >
                          <i
                            aria-hidden="true"
                            className="dropdown icon"
                            onClick={[Function]}
                          />
                        </Icon>
                        <DropdownMenu
                          className=""
                        >
                          <div
                            className="menu transition"
                          >
                            <DropdownItem
                              active={true}
                              key="0"
                              onClick={[Function]}
                              selected={true}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="All"
                              value="All"
                            >
                              <div
                                aria-checked={true}
                                aria-disabled={undefined}
                                aria-selected={true}
                                className="active selected item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="All"
                                >
                                  All
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="1"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="react"
                              value="react"
                            >
                              <div
                                aria-checked={false}
                                aria-disabled={undefined}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="react"
                                >
                                  react
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="2"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="redux"
                              value="redux"
                            >
                              <div
                                aria-checked={false}
                                aria-disabled={undefined}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="redux"
                                >
                                  redux
                                </span>
                              </div>
                            </DropdownItem>
                            <DropdownItem
                              active={false}
                              key="3"
                              onClick={[Function]}
                              selected={false}
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                              text="udacity"
                              value="udacity"
                            >
                              <div
                                aria-checked={false}
                                aria-disabled={undefined}
                                aria-selected={false}
                                className="item"
                                onClick={[Function]}
                                role="option"
                                style={
                                  Object {
                                    "pointerEvents": "all",
                                  }
                                }
                              >
                                <span
                                  className="text"
                                  key="udacity"
                                >
                                  udacity
                                </span>
                              </div>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Dropdown>
                  </Select>
                </div>
              </MenuItem>
            </div>
          </Menu>
        </Header>
      </Connect(Header)>
      <Connect(ListActions)>
        <ListActions
          filters={
            Object {
              "category": "All",
              "isCreatingComment": false,
              "isCreatingPost": false,
              "sortByComment": "score",
              "sortByPost": "score",
            }
          }
          setFilters={[Function]}
        >
          <Menu
            className="sub-menu"
            secondary={true}
          >
            <div
              className="ui secondary sub-menu menu"
            >
              <MenuItem
                header={true}
              >
                <div
                  className="header item"
                  onClick={[Function]}
                >
                  Sort By:
                </div>
              </MenuItem>
              <MenuItem
                active={true}
                name="score"
                onClick={[Function]}
              >
                <a
                  className="active item"
                  onClick={[Function]}
                >
                  High Score
                </a>
              </MenuItem>
              <MenuItem
                active={false}
                name="recent"
                onClick={[Function]}
              >
                <a
                  className="item"
                  onClick={[Function]}
                >
                  Most Recent
                </a>
              </MenuItem>
              <MenuItem
                position="right"
              >
                <div
                  className="right item"
                  onClick={[Function]}
                >
                  <Button
                    as="button"
                    content="Create Post"
                    icon="plus"
                    labelPosition="left"
                    onClick={[Function]}
                  >
                    <button
                      className="ui icon left labeled button"
                      disabled={undefined}
                      onClick={[Function]}
                      role="button"
                      tabIndex={undefined}
                    >
                      <Icon
                        as="i"
                        key="plus"
                        name="plus"
                      >
                        <i
                          aria-hidden="true"
                          className="plus icon"
                        />
                      </Icon>
                      Create Post
                    </button>
                  </Button>
                </div>
              </MenuItem>
            </div>
          </Menu>
        </ListActions>
      </Connect(ListActions)>
      <div>
        <Connect(Post)
          comments={
            Array [
              Object {
                "author": "thingtwo",
                "body": "Hi there! I am a COMMENT.",
                "deleted": false,
                "id": "894tuq4ut84ut8v4t8wun89g",
                "parentDeleted": false,
                "parentId": "8xf0y6ziyjabvozdd253nd",
                "timestamp": 1468166872634,
                "voteScore": 6,
              },
              Object {
                "author": "thingone",
                "body": "Comments. Are. Cool.",
                "deleted": false,
                "id": "8tu4bsun805n8un48ve89",
                "parentDeleted": false,
                "parentId": "8xf0y6ziyjabvozdd253nd",
                "timestamp": 1469479767190,
                "voteScore": -5,
              },
            ]
          }
          data={
            Object {
              "author": "thingtwo",
              "body": "Everyone says so after all.",
              "category": "react",
              "deleted": false,
              "id": "8xf0y6ziyjabvozdd253nd",
              "timestamp": 1467166872634,
              "title": "Udacity is the best place to learn React",
              "voteScore": 6,
            }
          }
          key="8xf0y6ziyjabvozdd253nd"
        >
          <Post
            comments={
              Array [
                Object {
                  "author": "thingtwo",
                  "body": "Hi there! I am a COMMENT.",
                  "deleted": false,
                  "id": "894tuq4ut84ut8v4t8wun89g",
                  "parentDeleted": false,
                  "parentId": "8xf0y6ziyjabvozdd253nd",
                  "timestamp": 1468166872634,
                  "voteScore": 6,
                },
                Object {
                  "author": "thingone",
                  "body": "Comments. Are. Cool.",
                  "deleted": false,
                  "id": "8tu4bsun805n8un48ve89",
                  "parentDeleted": false,
                  "parentId": "8xf0y6ziyjabvozdd253nd",
                  "timestamp": 1469479767190,
                  "voteScore": -5,
                },
              ]
            }
            data={
              Object {
                "author": "thingtwo",
                "body": "Everyone says so after all.",
                "category": "react",
                "deleted": false,
                "id": "8xf0y6ziyjabvozdd253nd",
                "timestamp": 1467166872634,
                "title": "Udacity is the best place to learn React",
                "voteScore": 6,
              }
            }
            deleteContent={[Function]}
            editPost={[Function]}
            vote={[Function]}
          >
            <Segment
              className="post"
              raised={true}
            >
              <div
                className="ui raised segment post"
              >
                <Grid
                  divided={true}
                  stretched={true}
                >
                  <div
                    className="ui stretched divided grid"
                  >
                    <GridColumn
                      style={
                        Object {
                          "padding": "0",
                        }
                      }
                      textAlign="center"
                      width={2}
                    >
                      <div
                        className="center aligned two wide column"
                        style={
                          Object {
                            "padding": "0",
                          }
                        }
                      >
                        <Menu
                          fluid={true}
                          text={true}
                          vertical={true}
                        >
                          <div
                            className="ui fluid text vertical menu"
                          >
                            <MenuItem>
                              <div
                                className="item"
                                onClick={[Function]}
                              >
                                <Button
                                  as="button"
                                  compact={true}
                                  icon="arrow up"
                                  onClick={[Function]}
                                >
                                  <button
                                    className="ui compact icon button"
                                    disabled={undefined}
                                    onClick={[Function]}
                                    role="button"
                                    tabIndex={undefined}
                                  >
                                    <Icon
                                      as="i"
                                      key="arrow up"
                                      name="arrow up"
                                    >
                                      <i
                                        aria-hidden="true"
                                        className="arrow up icon"
                                      />
                                    </Icon>
                                  </button>
                                </Button>
                              </div>
                            </MenuItem>
                            <MenuItem>
                              <div
                                className="item"
                                onClick={[Function]}
                              >
                                <Header
                                  as="h4"
                                >
                                  <h4
                                    className="ui header"
                                  >
                                    6
                                  </h4>
                                </Header>
                              </div>
                            </MenuItem>
                            <MenuItem>
                              <div
                                className="item"
                                onClick={[Function]}
                              >
                                <Button
                                  as="button"
                                  compact={true}
                                  icon="arrow down"
                                  onClick={[Function]}
                                >
                                  <button
                                    className="ui compact icon button"
                                    disabled={undefined}
                                    onClick={[Function]}
                                    role="button"
                                    tabIndex={undefined}
                                  >
                                    <Icon
                                      as="i"
                                      key="arrow down"
                                      name="arrow down"
                                    >
                                      <i
                                        aria-hidden="true"
                                        className="arrow down icon"
                                      />
                                    </Icon>
                                  </button>
                                </Button>
                              </div>
                            </MenuItem>
                          </div>
                        </Menu>
                      </div>
                    </GridColumn>
                    <GridColumn
                      width={14}
                    >
                      <div
                        className="fourteen wide column"
                      >
                        <Grid>
                          <div
                            className="ui grid"
                          >
                            <GridRow>
                              <div
                                className="row"
                              >
                                <GridColumn
                                  width={14}
                                >
                                  <div
                                    className="fourteen wide column"
                                  >
                                    <Header
                                      as="h3"
                                    >
                                      <h3
                                        className="ui header"
                                      >
                                        <Link
                                          replace={false}
                                          to="/post/8xf0y6ziyjabvozdd253nd"
                                        >
                                          <a
                                            href="/post/8xf0y6ziyjabvozdd253nd"
                                            onClick={[Function]}
                                          >
                                            Udacity is the best place to learn React
                                          </a>
                                        </Link>
                                      </h3>
                                    </Header>
                                  </div>
                                </GridColumn>
                                <GridColumn
                                  style={
                                    Object {
                                      "paddingLeft": "0px",
                                    }
                                  }
                                  width={2}
                                >
                                  <div
                                    className="two wide column"
                                    style={
                                      Object {
                                        "paddingLeft": "0px",
                                      }
                                    }
                                  >
                                    <ButtonGroup
                                      basic={true}
                                      floated="right"
                                      size="mini"
                                    >
                                      <div
                                        className="ui mini basic right floated buttons"
                                      >
                                        <Button
                                          as="button"
                                          compact={true}
                                          icon="write"
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="ui compact icon button"
                                            disabled={undefined}
                                            onClick={[Function]}
                                            role="button"
                                            tabIndex={undefined}
                                          >
                                            <Icon
                                              as="i"
                                              key="write"
                                              name="write"
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="write icon"
                                              />
                                            </Icon>
                                          </button>
                                        </Button>
                                        <Button
                                          as="button"
                                          compact={true}
                                          icon="trash"
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="ui compact icon button"
                                            disabled={undefined}
                                            onClick={[Function]}
                                            role="button"
                                            tabIndex={undefined}
                                          >
                                            <Icon
                                              as="i"
                                              key="trash"
                                              name="trash"
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="trash icon"
                                              />
                                            </Icon>
                                          </button>
                                        </Button>
                                      </div>
                                    </ButtonGroup>
                                  </div>
                                </GridColumn>
                              </div>
                            </GridRow>
                            <GridRow
                              className="post-content-bottom"
                            >
                              <div
                                className="row post-content-bottom"
                              >
                                <GridColumn
                                  width={12}
                                >
                                  <div
                                    className="twelve wide column"
                                  >
                                    by 
                                    thingtwo
                                     to 
                                    react
                                     on 
                                    2016-06-28 23:21:12
                                  </div>
                                </GridColumn>
                                <GridColumn
                                  textAlign="right"
                                  width={4}
                                >
                                  <div
                                    className="right aligned four wide column"
                                  >
                                    <Link
                                      replace={false}
                                      to="/post/8xf0y6ziyjabvozdd253nd"
                                    >
                                      <a
                                        href="/post/8xf0y6ziyjabvozdd253nd"
                                        onClick={[Function]}
                                      >
                                        2
                                         comments
                                      </a>
                                    </Link>
                                  </div>
                                </GridColumn>
                              </div>
                            </GridRow>
                          </div>
                        </Grid>
                      </div>
                    </GridColumn>
                  </div>
                </Grid>
              </div>
            </Segment>
          </Post>
        </Connect(Post)>
      </div>
    </div>
  </PostsList>
</Connect(PostsList)>
`;

exports[`PostsList Component testing snpashot of PostsList with posts 1`] = `
<PostsList
  categories={
    Array [
      Object {
        "name": "All",
        "path": "",
      },
      Object {
        "name": "react",
        "path": "react",
      },
      Object {
        "name": "redux",
        "path": "redux",
      },
      Object {
        "name": "udacity",
        "path": "udacity",
      },
    ]
  }
  changes={
    Object {
      "editingComment": null,
      "editingPost": null,
    }
  }
  comments={
    Object {
      "8xf0y6ziyjabvozdd253nd": Array [
        Object {
          "author": "thingtwo",
          "body": "Hi there! I am a COMMENT.",
          "deleted": false,
          "id": "894tuq4ut84ut8v4t8wun89g",
          "parentDeleted": false,
          "parentId": "8xf0y6ziyjabvozdd253nd",
          "timestamp": 1468166872634,
          "voteScore": 6,
        },
        Object {
          "author": "thingone",
          "body": "Comments. Are. Cool.",
          "deleted": false,
          "id": "8tu4bsun805n8un48ve89",
          "parentDeleted": false,
          "parentId": "8xf0y6ziyjabvozdd253nd",
          "timestamp": 1469479767190,
          "voteScore": -5,
        },
      ],
    }
  }
  filters={
    Object {
      "category": "All",
      "isCreatingComment": false,
      "isCreatingPost": false,
      "sortByComment": "score",
      "sortByPost": "recent",
    }
  }
  getPosts={[Function]}
  match={
    Object {
      "params": Object {},
    }
  }
  posts={
    Array [
      Object {
        "author": "thingtwo",
        "body": "Everyone says so after all.",
        "category": "react",
        "deleted": false,
        "id": "8xf0y6ziyjabvozdd253nd",
        "timestamp": 1467166872634,
        "title": "Udacity is the best place to learn React",
        "voteScore": 6,
      },
      Object {
        "author": "thingone",
        "body": "Just kidding. It takes more than 10 minutes to learn technology.",
        "category": "redux",
        "deleted": false,
        "id": "6ni6ok3ym7mf1p33lnez",
        "timestamp": 1468479767190,
        "title": "Learn Redux in 10 minutes!",
        "voteScore": -5,
      },
    ]
  }
>
  <div>
    <Connect(Header)
      history={undefined}
      selected={undefined}
    >
      <Header
        categories={
          Array [
            Object {
              "name": "All",
              "path": "",
            },
            Object {
              "name": "react",
              "path": "react",
            },
            Object {
              "name": "redux",
              "path": "redux",
            },
            Object {
              "name": "udacity",
              "path": "udacity",
            },
          ]
        }
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        getCategories={[Function]}
        history={undefined}
        selected={undefined}
        setFilters={[Function]}
      >
        <Menu
          borderless={true}
        >
          <div
            className="ui borderless menu"
          >
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <Link
                  className="logo"
                  replace={false}
                  to="/"
                >
                  <a
                    className="logo"
                    href="/"
                    onClick={[Function]}
                  >
                    Leitura
                  </a>
                </Link>
              </div>
            </MenuItem>
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <span
                  className="category-select-label"
                >
                  Category:
                </span>
                <Select
                  className="category-select"
                  disabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": 0,
                        "text": "All",
                        "value": "All",
                      },
                      Object {
                        "key": 1,
                        "text": "react",
                        "value": "react",
                      },
                      Object {
                        "key": 2,
                        "text": "redux",
                        "value": "redux",
                      },
                      Object {
                        "key": 3,
                        "text": "udacity",
                        "value": "udacity",
                      },
                    ]
                  }
                  placeholder="Choose a category"
                  value="All"
                >
                  <Dropdown
                    additionLabel="Add "
                    additionPosition="top"
                    className="category-select"
                    closeOnBlur={true}
                    disabled={false}
                    icon="dropdown"
                    minCharacters={1}
                    noResultsMessage="No results found."
                    onChange={[Function]}
                    openOnFocus={true}
                    options={
                      Array [
                        Object {
                          "key": 0,
                          "text": "All",
                          "value": "All",
                        },
                        Object {
                          "key": 1,
                          "text": "react",
                          "value": "react",
                        },
                        Object {
                          "key": 2,
                          "text": "redux",
                          "value": "redux",
                        },
                        Object {
                          "key": 3,
                          "text": "udacity",
                          "value": "udacity",
                        },
                      ]
                    }
                    placeholder="Choose a category"
                    renderLabel={[Function]}
                    searchInput="text"
                    selectOnBlur={true}
                    selectOnNavigation={true}
                    selection={true}
                    value="All"
                  >
                    <div
                      aria-busy={undefined}
                      aria-disabled={false}
                      aria-expanded={false}
                      aria-multiselectable={undefined}
                      className="ui selection dropdown category-select"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      role="listbox"
                      tabIndex={0}
                    >
                      <div
                        aria-live="polite"
                        className="text"
                        role="alert"
                      >
                        All
                      </div>
                      <Icon
                        as="i"
                        key="dropdown"
                        name="dropdown"
                        onClick={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="dropdown icon"
                          onClick={[Function]}
                        />
                      </Icon>
                      <DropdownMenu
                        className=""
                      >
                        <div
                          className="menu transition"
                        >
                          <DropdownItem
                            active={true}
                            key="0"
                            onClick={[Function]}
                            selected={true}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="All"
                            value="All"
                          >
                            <div
                              aria-checked={true}
                              aria-disabled={undefined}
                              aria-selected={true}
                              className="active selected item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="All"
                              >
                                All
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="1"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="react"
                            value="react"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="react"
                              >
                                react
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="2"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="redux"
                            value="redux"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="redux"
                              >
                                redux
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="3"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="udacity"
                            value="udacity"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="udacity"
                              >
                                udacity
                              </span>
                            </div>
                          </DropdownItem>
                        </div>
                      </DropdownMenu>
                    </div>
                  </Dropdown>
                </Select>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </Header>
    </Connect(Header)>
    <Connect(ListActions)>
      <ListActions
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        setFilters={[Function]}
      >
        <Menu
          className="sub-menu"
          secondary={true}
        >
          <div
            className="ui secondary sub-menu menu"
          >
            <MenuItem
              header={true}
            >
              <div
                className="header item"
                onClick={[Function]}
              >
                Sort By:
              </div>
            </MenuItem>
            <MenuItem
              active={true}
              name="score"
              onClick={[Function]}
            >
              <a
                className="active item"
                onClick={[Function]}
              >
                High Score
              </a>
            </MenuItem>
            <MenuItem
              active={false}
              name="recent"
              onClick={[Function]}
            >
              <a
                className="item"
                onClick={[Function]}
              >
                Most Recent
              </a>
            </MenuItem>
            <MenuItem
              position="right"
            >
              <div
                className="right item"
                onClick={[Function]}
              >
                <Button
                  as="button"
                  content="Create Post"
                  icon="plus"
                  labelPosition="left"
                  onClick={[Function]}
                >
                  <button
                    className="ui icon left labeled button"
                    disabled={undefined}
                    onClick={[Function]}
                    role="button"
                    tabIndex={undefined}
                  >
                    <Icon
                      as="i"
                      key="plus"
                      name="plus"
                    >
                      <i
                        aria-hidden="true"
                        className="plus icon"
                      />
                    </Icon>
                    Create Post
                  </button>
                </Button>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </ListActions>
    </Connect(ListActions)>
    <div>
      <Connect(Post)
        comments={undefined}
        data={
          Object {
            "author": "thingone",
            "body": "Just kidding. It takes more than 10 minutes to learn technology.",
            "category": "redux",
            "deleted": false,
            "id": "6ni6ok3ym7mf1p33lnez",
            "timestamp": 1468479767190,
            "title": "Learn Redux in 10 minutes!",
            "voteScore": -5,
          }
        }
        key="6ni6ok3ym7mf1p33lnez"
      >
        <Post
          comments={undefined}
          data={
            Object {
              "author": "thingone",
              "body": "Just kidding. It takes more than 10 minutes to learn technology.",
              "category": "redux",
              "deleted": false,
              "id": "6ni6ok3ym7mf1p33lnez",
              "timestamp": 1468479767190,
              "title": "Learn Redux in 10 minutes!",
              "voteScore": -5,
            }
          }
          deleteContent={[Function]}
          editPost={[Function]}
          vote={[Function]}
        >
          <Segment
            className="post"
            raised={true}
          >
            <div
              className="ui raised segment post"
            >
              <Grid
                divided={true}
                stretched={true}
              >
                <div
                  className="ui stretched divided grid"
                >
                  <GridColumn
                    style={
                      Object {
                        "padding": "0",
                      }
                    }
                    textAlign="center"
                    width={2}
                  >
                    <div
                      className="center aligned two wide column"
                      style={
                        Object {
                          "padding": "0",
                        }
                      }
                    >
                      <Menu
                        fluid={true}
                        text={true}
                        vertical={true}
                      >
                        <div
                          className="ui fluid text vertical menu"
                        >
                          <MenuItem>
                            <div
                              className="item"
                              onClick={[Function]}
                            >
                              <Button
                                as="button"
                                compact={true}
                                icon="arrow up"
                                onClick={[Function]}
                              >
                                <button
                                  className="ui compact icon button"
                                  disabled={undefined}
                                  onClick={[Function]}
                                  role="button"
                                  tabIndex={undefined}
                                >
                                  <Icon
                                    as="i"
                                    key="arrow up"
                                    name="arrow up"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="arrow up icon"
                                    />
                                  </Icon>
                                </button>
                              </Button>
                            </div>
                          </MenuItem>
                          <MenuItem>
                            <div
                              className="item"
                              onClick={[Function]}
                            >
                              <Header
                                as="h4"
                              >
                                <h4
                                  className="ui header"
                                >
                                  -5
                                </h4>
                              </Header>
                            </div>
                          </MenuItem>
                          <MenuItem>
                            <div
                              className="item"
                              onClick={[Function]}
                            >
                              <Button
                                as="button"
                                compact={true}
                                icon="arrow down"
                                onClick={[Function]}
                              >
                                <button
                                  className="ui compact icon button"
                                  disabled={undefined}
                                  onClick={[Function]}
                                  role="button"
                                  tabIndex={undefined}
                                >
                                  <Icon
                                    as="i"
                                    key="arrow down"
                                    name="arrow down"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="arrow down icon"
                                    />
                                  </Icon>
                                </button>
                              </Button>
                            </div>
                          </MenuItem>
                        </div>
                      </Menu>
                    </div>
                  </GridColumn>
                  <GridColumn
                    width={14}
                  >
                    <div
                      className="fourteen wide column"
                    >
                      <Grid>
                        <div
                          className="ui grid"
                        >
                          <GridRow>
                            <div
                              className="row"
                            >
                              <GridColumn
                                width={14}
                              >
                                <div
                                  className="fourteen wide column"
                                >
                                  <Header
                                    as="h3"
                                  >
                                    <h3
                                      className="ui header"
                                    >
                                      <Link
                                        replace={false}
                                        to="/post/6ni6ok3ym7mf1p33lnez"
                                      >
                                        <a
                                          href="/post/6ni6ok3ym7mf1p33lnez"
                                          onClick={[Function]}
                                        >
                                          Learn Redux in 10 minutes!
                                        </a>
                                      </Link>
                                    </h3>
                                  </Header>
                                </div>
                              </GridColumn>
                              <GridColumn
                                style={
                                  Object {
                                    "paddingLeft": "0px",
                                  }
                                }
                                width={2}
                              >
                                <div
                                  className="two wide column"
                                  style={
                                    Object {
                                      "paddingLeft": "0px",
                                    }
                                  }
                                >
                                  <ButtonGroup
                                    basic={true}
                                    floated="right"
                                    size="mini"
                                  >
                                    <div
                                      className="ui mini basic right floated buttons"
                                    >
                                      <Button
                                        as="button"
                                        compact={true}
                                        icon="write"
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="ui compact icon button"
                                          disabled={undefined}
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex={undefined}
                                        >
                                          <Icon
                                            as="i"
                                            key="write"
                                            name="write"
                                          >
                                            <i
                                              aria-hidden="true"
                                              className="write icon"
                                            />
                                          </Icon>
                                        </button>
                                      </Button>
                                      <Button
                                        as="button"
                                        compact={true}
                                        icon="trash"
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="ui compact icon button"
                                          disabled={undefined}
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex={undefined}
                                        >
                                          <Icon
                                            as="i"
                                            key="trash"
                                            name="trash"
                                          >
                                            <i
                                              aria-hidden="true"
                                              className="trash icon"
                                            />
                                          </Icon>
                                        </button>
                                      </Button>
                                    </div>
                                  </ButtonGroup>
                                </div>
                              </GridColumn>
                            </div>
                          </GridRow>
                          <GridRow
                            className="post-content-bottom"
                          >
                            <div
                              className="row post-content-bottom"
                            >
                              <GridColumn
                                width={12}
                              >
                                <div
                                  className="twelve wide column"
                                >
                                  by 
                                  thingone
                                   to 
                                  redux
                                   on 
                                  2016-07-14 04:02:47
                                </div>
                              </GridColumn>
                              <GridColumn
                                textAlign="right"
                                width={4}
                              >
                                <div
                                  className="right aligned four wide column"
                                >
                                  <Link
                                    replace={false}
                                    to="/post/6ni6ok3ym7mf1p33lnez"
                                  >
                                    <a
                                      href="/post/6ni6ok3ym7mf1p33lnez"
                                      onClick={[Function]}
                                    >
                                      0
                                       comments
                                    </a>
                                  </Link>
                                </div>
                              </GridColumn>
                            </div>
                          </GridRow>
                        </div>
                      </Grid>
                    </div>
                  </GridColumn>
                </div>
              </Grid>
            </div>
          </Segment>
        </Post>
      </Connect(Post)>
      <Connect(Post)
        comments={
          Array [
            Object {
              "author": "thingtwo",
              "body": "Hi there! I am a COMMENT.",
              "deleted": false,
              "id": "894tuq4ut84ut8v4t8wun89g",
              "parentDeleted": false,
              "parentId": "8xf0y6ziyjabvozdd253nd",
              "timestamp": 1468166872634,
              "voteScore": 6,
            },
            Object {
              "author": "thingone",
              "body": "Comments. Are. Cool.",
              "deleted": false,
              "id": "8tu4bsun805n8un48ve89",
              "parentDeleted": false,
              "parentId": "8xf0y6ziyjabvozdd253nd",
              "timestamp": 1469479767190,
              "voteScore": -5,
            },
          ]
        }
        data={
          Object {
            "author": "thingtwo",
            "body": "Everyone says so after all.",
            "category": "react",
            "deleted": false,
            "id": "8xf0y6ziyjabvozdd253nd",
            "timestamp": 1467166872634,
            "title": "Udacity is the best place to learn React",
            "voteScore": 6,
          }
        }
        key="8xf0y6ziyjabvozdd253nd"
      >
        <Post
          comments={
            Array [
              Object {
                "author": "thingtwo",
                "body": "Hi there! I am a COMMENT.",
                "deleted": false,
                "id": "894tuq4ut84ut8v4t8wun89g",
                "parentDeleted": false,
                "parentId": "8xf0y6ziyjabvozdd253nd",
                "timestamp": 1468166872634,
                "voteScore": 6,
              },
              Object {
                "author": "thingone",
                "body": "Comments. Are. Cool.",
                "deleted": false,
                "id": "8tu4bsun805n8un48ve89",
                "parentDeleted": false,
                "parentId": "8xf0y6ziyjabvozdd253nd",
                "timestamp": 1469479767190,
                "voteScore": -5,
              },
            ]
          }
          data={
            Object {
              "author": "thingtwo",
              "body": "Everyone says so after all.",
              "category": "react",
              "deleted": false,
              "id": "8xf0y6ziyjabvozdd253nd",
              "timestamp": 1467166872634,
              "title": "Udacity is the best place to learn React",
              "voteScore": 6,
            }
          }
          deleteContent={[Function]}
          editPost={[Function]}
          vote={[Function]}
        >
          <Segment
            className="post"
            raised={true}
          >
            <div
              className="ui raised segment post"
            >
              <Grid
                divided={true}
                stretched={true}
              >
                <div
                  className="ui stretched divided grid"
                >
                  <GridColumn
                    style={
                      Object {
                        "padding": "0",
                      }
                    }
                    textAlign="center"
                    width={2}
                  >
                    <div
                      className="center aligned two wide column"
                      style={
                        Object {
                          "padding": "0",
                        }
                      }
                    >
                      <Menu
                        fluid={true}
                        text={true}
                        vertical={true}
                      >
                        <div
                          className="ui fluid text vertical menu"
                        >
                          <MenuItem>
                            <div
                              className="item"
                              onClick={[Function]}
                            >
                              <Button
                                as="button"
                                compact={true}
                                icon="arrow up"
                                onClick={[Function]}
                              >
                                <button
                                  className="ui compact icon button"
                                  disabled={undefined}
                                  onClick={[Function]}
                                  role="button"
                                  tabIndex={undefined}
                                >
                                  <Icon
                                    as="i"
                                    key="arrow up"
                                    name="arrow up"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="arrow up icon"
                                    />
                                  </Icon>
                                </button>
                              </Button>
                            </div>
                          </MenuItem>
                          <MenuItem>
                            <div
                              className="item"
                              onClick={[Function]}
                            >
                              <Header
                                as="h4"
                              >
                                <h4
                                  className="ui header"
                                >
                                  6
                                </h4>
                              </Header>
                            </div>
                          </MenuItem>
                          <MenuItem>
                            <div
                              className="item"
                              onClick={[Function]}
                            >
                              <Button
                                as="button"
                                compact={true}
                                icon="arrow down"
                                onClick={[Function]}
                              >
                                <button
                                  className="ui compact icon button"
                                  disabled={undefined}
                                  onClick={[Function]}
                                  role="button"
                                  tabIndex={undefined}
                                >
                                  <Icon
                                    as="i"
                                    key="arrow down"
                                    name="arrow down"
                                  >
                                    <i
                                      aria-hidden="true"
                                      className="arrow down icon"
                                    />
                                  </Icon>
                                </button>
                              </Button>
                            </div>
                          </MenuItem>
                        </div>
                      </Menu>
                    </div>
                  </GridColumn>
                  <GridColumn
                    width={14}
                  >
                    <div
                      className="fourteen wide column"
                    >
                      <Grid>
                        <div
                          className="ui grid"
                        >
                          <GridRow>
                            <div
                              className="row"
                            >
                              <GridColumn
                                width={14}
                              >
                                <div
                                  className="fourteen wide column"
                                >
                                  <Header
                                    as="h3"
                                  >
                                    <h3
                                      className="ui header"
                                    >
                                      <Link
                                        replace={false}
                                        to="/post/8xf0y6ziyjabvozdd253nd"
                                      >
                                        <a
                                          href="/post/8xf0y6ziyjabvozdd253nd"
                                          onClick={[Function]}
                                        >
                                          Udacity is the best place to learn React
                                        </a>
                                      </Link>
                                    </h3>
                                  </Header>
                                </div>
                              </GridColumn>
                              <GridColumn
                                style={
                                  Object {
                                    "paddingLeft": "0px",
                                  }
                                }
                                width={2}
                              >
                                <div
                                  className="two wide column"
                                  style={
                                    Object {
                                      "paddingLeft": "0px",
                                    }
                                  }
                                >
                                  <ButtonGroup
                                    basic={true}
                                    floated="right"
                                    size="mini"
                                  >
                                    <div
                                      className="ui mini basic right floated buttons"
                                    >
                                      <Button
                                        as="button"
                                        compact={true}
                                        icon="write"
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="ui compact icon button"
                                          disabled={undefined}
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex={undefined}
                                        >
                                          <Icon
                                            as="i"
                                            key="write"
                                            name="write"
                                          >
                                            <i
                                              aria-hidden="true"
                                              className="write icon"
                                            />
                                          </Icon>
                                        </button>
                                      </Button>
                                      <Button
                                        as="button"
                                        compact={true}
                                        icon="trash"
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="ui compact icon button"
                                          disabled={undefined}
                                          onClick={[Function]}
                                          role="button"
                                          tabIndex={undefined}
                                        >
                                          <Icon
                                            as="i"
                                            key="trash"
                                            name="trash"
                                          >
                                            <i
                                              aria-hidden="true"
                                              className="trash icon"
                                            />
                                          </Icon>
                                        </button>
                                      </Button>
                                    </div>
                                  </ButtonGroup>
                                </div>
                              </GridColumn>
                            </div>
                          </GridRow>
                          <GridRow
                            className="post-content-bottom"
                          >
                            <div
                              className="row post-content-bottom"
                            >
                              <GridColumn
                                width={12}
                              >
                                <div
                                  className="twelve wide column"
                                >
                                  by 
                                  thingtwo
                                   to 
                                  react
                                   on 
                                  2016-06-28 23:21:12
                                </div>
                              </GridColumn>
                              <GridColumn
                                textAlign="right"
                                width={4}
                              >
                                <div
                                  className="right aligned four wide column"
                                >
                                  <Link
                                    replace={false}
                                    to="/post/8xf0y6ziyjabvozdd253nd"
                                  >
                                    <a
                                      href="/post/8xf0y6ziyjabvozdd253nd"
                                      onClick={[Function]}
                                    >
                                      2
                                       comments
                                    </a>
                                  </Link>
                                </div>
                              </GridColumn>
                            </div>
                          </GridRow>
                        </div>
                      </Grid>
                    </div>
                  </GridColumn>
                </div>
              </Grid>
            </div>
          </Segment>
        </Post>
      </Connect(Post)>
    </div>
  </div>
</PostsList>
`;

exports[`PostsList Component testing snpashot of PostsList without posts 1`] = `
<PostsList
  categories={
    Array [
      Object {
        "name": "All",
        "path": "",
      },
      Object {
        "name": "react",
        "path": "react",
      },
      Object {
        "name": "redux",
        "path": "redux",
      },
      Object {
        "name": "udacity",
        "path": "udacity",
      },
    ]
  }
  changes={
    Object {
      "editingComment": null,
      "editingPost": null,
    }
  }
  comments={Array []}
  filters={
    Object {
      "category": "All",
      "isCreatingComment": false,
      "isCreatingPost": false,
      "sortByComment": "score",
      "sortByPost": "score",
    }
  }
  getPosts={[Function]}
  match={
    Object {
      "params": Object {},
    }
  }
  posts={Array []}
>
  <div>
    <Connect(Header)
      history={undefined}
      selected={undefined}
    >
      <Header
        categories={
          Array [
            Object {
              "name": "All",
              "path": "",
            },
            Object {
              "name": "react",
              "path": "react",
            },
            Object {
              "name": "redux",
              "path": "redux",
            },
            Object {
              "name": "udacity",
              "path": "udacity",
            },
          ]
        }
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        getCategories={[Function]}
        history={undefined}
        selected={undefined}
        setFilters={[Function]}
      >
        <Menu
          borderless={true}
        >
          <div
            className="ui borderless menu"
          >
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <Link
                  className="logo"
                  replace={false}
                  to="/"
                >
                  <a
                    className="logo"
                    href="/"
                    onClick={[Function]}
                  >
                    Leitura
                  </a>
                </Link>
              </div>
            </MenuItem>
            <MenuItem>
              <div
                className="item"
                onClick={[Function]}
              >
                <span
                  className="category-select-label"
                >
                  Category:
                </span>
                <Select
                  className="category-select"
                  disabled={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "key": 0,
                        "text": "All",
                        "value": "All",
                      },
                      Object {
                        "key": 1,
                        "text": "react",
                        "value": "react",
                      },
                      Object {
                        "key": 2,
                        "text": "redux",
                        "value": "redux",
                      },
                      Object {
                        "key": 3,
                        "text": "udacity",
                        "value": "udacity",
                      },
                    ]
                  }
                  placeholder="Choose a category"
                  value="All"
                >
                  <Dropdown
                    additionLabel="Add "
                    additionPosition="top"
                    className="category-select"
                    closeOnBlur={true}
                    disabled={false}
                    icon="dropdown"
                    minCharacters={1}
                    noResultsMessage="No results found."
                    onChange={[Function]}
                    openOnFocus={true}
                    options={
                      Array [
                        Object {
                          "key": 0,
                          "text": "All",
                          "value": "All",
                        },
                        Object {
                          "key": 1,
                          "text": "react",
                          "value": "react",
                        },
                        Object {
                          "key": 2,
                          "text": "redux",
                          "value": "redux",
                        },
                        Object {
                          "key": 3,
                          "text": "udacity",
                          "value": "udacity",
                        },
                      ]
                    }
                    placeholder="Choose a category"
                    renderLabel={[Function]}
                    searchInput="text"
                    selectOnBlur={true}
                    selectOnNavigation={true}
                    selection={true}
                    value="All"
                  >
                    <div
                      aria-busy={undefined}
                      aria-disabled={false}
                      aria-expanded={false}
                      aria-multiselectable={undefined}
                      className="ui selection dropdown category-select"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseDown={[Function]}
                      role="listbox"
                      tabIndex={0}
                    >
                      <div
                        aria-live="polite"
                        className="text"
                        role="alert"
                      >
                        All
                      </div>
                      <Icon
                        as="i"
                        key="dropdown"
                        name="dropdown"
                        onClick={[Function]}
                      >
                        <i
                          aria-hidden="true"
                          className="dropdown icon"
                          onClick={[Function]}
                        />
                      </Icon>
                      <DropdownMenu
                        className=""
                      >
                        <div
                          className="menu transition"
                        >
                          <DropdownItem
                            active={true}
                            key="0"
                            onClick={[Function]}
                            selected={true}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="All"
                            value="All"
                          >
                            <div
                              aria-checked={true}
                              aria-disabled={undefined}
                              aria-selected={true}
                              className="active selected item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="All"
                              >
                                All
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="1"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="react"
                            value="react"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="react"
                              >
                                react
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="2"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="redux"
                            value="redux"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="redux"
                              >
                                redux
                              </span>
                            </div>
                          </DropdownItem>
                          <DropdownItem
                            active={false}
                            key="3"
                            onClick={[Function]}
                            selected={false}
                            style={
                              Object {
                                "pointerEvents": "all",
                              }
                            }
                            text="udacity"
                            value="udacity"
                          >
                            <div
                              aria-checked={false}
                              aria-disabled={undefined}
                              aria-selected={false}
                              className="item"
                              onClick={[Function]}
                              role="option"
                              style={
                                Object {
                                  "pointerEvents": "all",
                                }
                              }
                            >
                              <span
                                className="text"
                                key="udacity"
                              >
                                udacity
                              </span>
                            </div>
                          </DropdownItem>
                        </div>
                      </DropdownMenu>
                    </div>
                  </Dropdown>
                </Select>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </Header>
    </Connect(Header)>
    <Connect(ListActions)>
      <ListActions
        filters={
          Object {
            "category": "All",
            "isCreatingComment": false,
            "isCreatingPost": false,
            "sortByComment": "score",
            "sortByPost": "score",
          }
        }
        setFilters={[Function]}
      >
        <Menu
          className="sub-menu"
          secondary={true}
        >
          <div
            className="ui secondary sub-menu menu"
          >
            <MenuItem
              header={true}
            >
              <div
                className="header item"
                onClick={[Function]}
              >
                Sort By:
              </div>
            </MenuItem>
            <MenuItem
              active={true}
              name="score"
              onClick={[Function]}
            >
              <a
                className="active item"
                onClick={[Function]}
              >
                High Score
              </a>
            </MenuItem>
            <MenuItem
              active={false}
              name="recent"
              onClick={[Function]}
            >
              <a
                className="item"
                onClick={[Function]}
              >
                Most Recent
              </a>
            </MenuItem>
            <MenuItem
              position="right"
            >
              <div
                className="right item"
                onClick={[Function]}
              >
                <Button
                  as="button"
                  content="Create Post"
                  icon="plus"
                  labelPosition="left"
                  onClick={[Function]}
                >
                  <button
                    className="ui icon left labeled button"
                    disabled={undefined}
                    onClick={[Function]}
                    role="button"
                    tabIndex={undefined}
                  >
                    <Icon
                      as="i"
                      key="plus"
                      name="plus"
                    >
                      <i
                        aria-hidden="true"
                        className="plus icon"
                      />
                    </Icon>
                    Create Post
                  </button>
                </Button>
              </div>
            </MenuItem>
          </div>
        </Menu>
      </ListActions>
    </Connect(ListActions)>
    <Message
      className="infoMessage"
      color="teal"
      size="mini"
    >
      <div
        className="ui teal mini message infoMessage"
      >
        No posts created yet! Be the first!
      </div>
    </Message>
  </div>
</PostsList>
`;
